=head1 Name

B<WebDAO> - лекговесный фрэймворк, предназначенный для написания различных по сложности приложений.

=head2 Основные принципы 

=over

=item *  Динамическая структура доменной логики

=item *  Адресация объектов по URL

=back

=head3 Динамическая структура доменной логики

Структура объектов доменной логики формируется на основе I<XML>(I<HTML>) файла. Для примера, его имя пусть будет привычным для web разработчиков : I<index.xhtml>. 

  <body>
  <div>
   <wd>
     <object class="MyTest" id="page"/>
   </wd>
  </div>
  </body>

В этом тексте помимо стандартных XHML тэгов используются дополнительные, например: I<wd> и I<object>. Тэг I<wd> является признаком начала специальной ( I<интерпретируемой>) области.
Пока отсутствует поддержка пространств XML имен, но со временем, я обещаю, она появится.

Тэги I<wd> обрамляют область, в которой располагаются определения объектов и другие интерпретируемые тэги.  В приведенном примере, с помощью I<command> создается экземпляр класса I<MyTest>  и идентификатором I<page>. Именно идентификатор объекта используется в URL. Например:

    http://example.org/page
    http://example.org/page/Method?par1=1&par2=2

В состав пакета I<WebDAO> входит лексический анализатор, который обрабатывает этот файл и на основе I<xml> тэгов строит структуру объектов.

Создадим файл F<MyTest.pm> слеудющего содержания:

    package MyTest;
    use HTML::WebDAO;
    use base 'HTML::WebDAO::Component';
    
    sub fetch {
        "Hello Web X.0!";
    }
    1;

Каждый из объектов доменной структуры, участвующих в формировании результатов, отображает себя сам. Поэтому, в приведенном примере, результирующий XHTML будет выглядить следующим образом:

    <body>
    <div>
       Hello Web X.0!
    </div>
    </body>

=head3 Адресация объектов по URL

Одна из основных идей I<WebDAO> -  отображение URL на доменную структуру объектов.

Например, для адреса:

    http:://example.com/test/Method?param=1&param2

Будет вызван метод I<Method> у объекта I<test>. Имена публичных методов, которые доступны для обращений из-вне начинаются с большой буквы. Имена объектов с любой. В случае, если имя метода не указано используется I<Index_x>. Если этот метод отсутствует у объекта, возвращается статус "404: Not found". Таким образом адреса:

    http:://example.com/test/?param=1&param2
    http:://example.com/test/

Эквивалентны вызовам

    http:://example.com/test/Index_x?param=1&param2
    http:://example.com/test/Index_x


=head2 Язык определений

=over 

=item object

В качестве имени класса используется название perl модуля. Например:

  <body>
  <div>
   <wd>
        <object class="MyTest" id="page"/>
        <object class="MySite::Login" id="login"/>
        <object class="MySite::Status" id="status"/>
   </wd>
  </div>
  </body>

=back

=head2 Поддержка окружений

работа под mod_perl2, FastCGI, CGI;
Прозрачные сессионные атрибуты для объектов;

=cut


